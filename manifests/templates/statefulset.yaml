apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port2.port }}
      name: {{ .Values.service.port2.name }}
  selector:
    app: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  serviceName: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      initContainers:
      - name: fetch-dump
        image: alpine:3.9
        command:
          [
            "wget",
            "--no-check-certificate",
            "https://github.com/avsprashant/mflabstest/raw/main/app/movies.dump",
            "-O",
            "/data/db/movies.dump",
          ]
        volumeMounts:
          - mountPath: /data/db
            name: data
      containers:
        - name: mongo
          image: mongo:4.4.6
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}
                key: mongo_initdb_root_username
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}
                key: mongo_initdb_root_password
          volumeMounts:
          - name: data
            mountPath: /data/db
          ports:
            - name: {{ .Values.service.port2.name }}
              containerPort: {{ .Values.service.port2.port }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "mongorestore -u admin -p admin --archive < /data/db/movies.dump"]
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ index .Values.profiles (.Values.profiles.active) "storage" "size" }}